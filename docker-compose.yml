version: "3.8"

services:

  mysqldb:
    image: mysql:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - db:/var/lib/mysql

  backend:
    container_name: mercury_backend
    depends_on:
      - mysqldb
    build: ./MercuryBackend
    restart: on-failure
    env_file: ./.env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    environment:
        spring.config.import: optional:./.env[.properties]
        spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
        spring.datasource.url: jdbc:mysql://mysqldb:${MYSQLDB_DOCKER_PORT}/${MYSQLDB_DATABASE}?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
        spring.datasource.username: ${MYSQLDB_USER}
        spring.datasource.password: ${MYSQLDB_ROOT_PASSWORD}
        spring.jpa.hibernate.ddl-auto: "update"
    volumes:
      - .m2:/root:/.m2
    stdin_open: true
    tty: true

  frontend:
    container_name: mercury_frontend
    build: ./MercuryFrontend
    volumes:
      - ./MercuryFrontend/src:/app/src
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev

volumes:
  db: